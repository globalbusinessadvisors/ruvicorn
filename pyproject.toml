[tool.poetry]
name = "ruvicorn"
version = "0.1.0"
description = "Enhanced ASGI server implementation extending uvicorn functionality"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/yourusername/ruvicorn"
documentation = "https://github.com/yourusername/ruvicorn#readme"
keywords = ["asgi", "server", "uvicorn", "fastapi", "starlette"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.8"
uvicorn = "^0.23.0"
click = "^8.1.0"
pyyaml = "^6.0"
python-dotenv = "^1.0.0"
watchfiles = "^0.20.0"
prometheus-client = "^0.17.0"
pyjwt = "^2.8.0"
colorlog = "^6.7.0"
typing-extensions = "^4.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.0"
pylint = "^2.17.0"
pytest-mock = "^3.11.1"
aiohttp = "^3.8.5"
httpx = "^0.24.1"
fastapi = "^0.109.0"
starlette = "^0.36.0"

[tool.poetry.scripts]
ruvicorn = "ruvicorn.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=ruvicorn --cov-report=term-missing -v"

[tool.coverage.run]
source = ["ruvicorn"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
show_missing = true
